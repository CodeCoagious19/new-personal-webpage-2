I"Sã<h2 id="stringhe">Stringhe</h2>

<p>Una stringa √® un tipo di dato formato da zero o pi√π caratteri racchiusi tra virgolette doppie <code class="language-plaintext highlighter-rouge">" "</code>, singole <code class="language-plaintext highlighter-rouge">' '</code> o tramite accento grave. √à possibile chiamare qualsiasi metodo dell‚Äôoggetto <code class="language-plaintext highlighter-rouge">String</code> su una stringa.</p>

<div class="language-js highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kd">const</span> <span class="nx">saluto</span> <span class="o">=</span> <span class="dl">'</span><span class="s1">Ciao a tutti</span><span class="dl">'</span><span class="p">;</span> 

<span class="c1">//Stringa multi-line. Attenzione all'apice -accento grave-</span>
<span class="kd">var</span> <span class="nx">fraseFilosofica</span> <span class="o">=</span> <span class="s2">`Il mattino ha l'oro in bocca.
                       La sera no`</span><span class="p">;</span>
</code></pre></div></div>

<h2 id="opearotri-propriet√†-e-metodi-su-stringhe">Opearotri, Propriet√† e Metodi su stringhe</h2>

<h2 id="operatori">Operatori</h2>

<ul>
  <li><code class="language-plaintext highlighter-rouge">+</code>: Uninione/concatenazione di stringhe.</li>
  <li><code class="language-plaintext highlighter-rouge">[ index ]</code>: Indicizzazione di una stringa come array di caratteri, in sola lettura</li>
  <li><code class="language-plaintext highlighter-rouge">&lt;, &gt;</code>: operatori di confronto tra stringhe. Ritornano un <code class="language-plaintext highlighter-rouge">boolean</code>, <em>true/false</em></li>
  <li><code class="language-plaintext highlighter-rouge">{}</code>: Interpolazione di stringhe</li>
</ul>

<div class="language-js highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kd">const</span> <span class="nx">nome</span> <span class="o">=</span> <span class="dl">"</span><span class="s2">marco</span><span class="dl">"</span><span class="p">;</span>
<span class="kd">const</span> <span class="nx">cognome</span> <span class="o">=</span> <span class="dl">"</span><span class="s2">rossi</span><span class="dl">"</span><span class="p">;</span>

<span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">nome</span> <span class="o">+</span> <span class="dl">"</span><span class="s2"> </span><span class="dl">"</span> <span class="o">+</span> <span class="nx">cognome</span><span class="p">);</span> <span class="c1">//marco rossi</span>
<span class="c1">//                 0,1,2,3,4 </span>
<span class="c1">//const cognome = "r o s s i";</span>
<span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">cognome</span><span class="p">[</span><span class="mi">1</span><span class="p">]);</span>     <span class="c1">//"o"</span>
<span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">nome</span> <span class="o">&gt;</span> <span class="nx">cognome</span><span class="p">);</span> <span class="c1">//true</span>
</code></pre></div></div>

<h2 id="approfondimento-interpolazioni-di-stringhe">Approfondimento Interpolazioni di stringhe</h2>

<p>Questa parte per adesso potrebbe essere troppo ‚Äúapprofondita‚Äù, √® possibile saltarla senza pregiudicare il corso.</p>

<p>E‚Äô possibile utilizzare espressioni all‚Äôinterno di un unica stringa. Per far cio‚Äô si ricorre all‚Äôinterpolazione di stringhe molto comune anche in altri linguaggi di programmazione.</p>

<p><strong>La sintassi prevede di usare SOLO l‚Äôaccento grave</strong> e per le espressioni da valutare, l‚Äôoperatore <code class="language-plaintext highlighter-rouge">$</code> seguito dall‚Äôespressione racchiusa tra le parentesi graffe <code class="language-plaintext highlighter-rouge">{ }</code></p>

<div class="language-js highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kd">let</span> <span class="nx">index</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span>
<span class="c1">//La variabile "index" viene valuta</span>
<span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="s2">`</span><span class="p">${</span><span class="nx">index</span><span class="p">}</span><span class="s2"> ciao`</span><span class="p">);</span> <span class="c1">//0</span>

<span class="nx">index</span> <span class="o">=</span> <span class="nx">index</span> <span class="o">+</span> <span class="mi">1</span><span class="p">;</span>
<span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="s2">`</span><span class="p">${</span><span class="nx">index</span><span class="p">}</span><span class="s2"> ciao`</span><span class="p">);</span> <span class="c1">//1</span>
</code></pre></div></div>

<h2 id="le-stringhe-sono-immutabili">Le stringhe sono immutabili</h2>

<p><strong>!! LE STRINGHE SONO IMMUTABILI IN JAVASCRIPT !!</strong><br />
Questo significa che dal punto di vista semantico le stringhe non possono essere trattate come array di caratteri e di fatto non √® possibile applicare alle stringhe i metodi applicabili agli array.</p>

<div class="language-js highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kd">var</span> <span class="nx">saluto</span> <span class="o">=</span> <span class="dl">"</span><span class="s2">ciao</span><span class="dl">"</span>
<span class="nx">saluto</span><span class="p">[</span><span class="mi">2</span><span class="p">]</span> <span class="o">=</span> <span class="dl">'</span><span class="s1">Z</span><span class="dl">'</span><span class="p">;</span>

<span class="c1">//Attenzione! LE STRINGHE SONO IMMUTABILI</span>
<span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">saluto</span><span class="p">);</span> <span class="c1">//ciao</span>
</code></pre></div></div>

<p>L‚Äôunico modo per cambiare un carattere all‚Äôinterno di una stringa √® distruggere l‚Äôintera stringa e ricostruirne un‚Äôaltra con il carattere modificato tramite assegnamento. Non √® possibile tuttavia modificre direttamente il singolo carattere di una stringa.</p>

<div class="language-js highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kd">var</span> <span class="nx">saluto</span> <span class="o">=</span> <span class="dl">"</span><span class="s2">ciao</span><span class="dl">"</span>
<span class="nx">saluto</span><span class="p">[</span><span class="mi">2</span><span class="p">]</span> <span class="o">=</span> <span class="dl">'</span><span class="s1">2</span><span class="dl">'</span><span class="p">;</span>
<span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">saluto</span><span class="p">);</span> <span class="c1">//ciao</span>

<span class="nx">saluto</span> <span class="o">=</span> <span class="dl">"</span><span class="s2">super ciao</span><span class="dl">"</span>
<span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">saluto</span><span class="p">);</span> <span class="c1">//super ciao</span>
</code></pre></div></div>

<h2 id="propriet√†">Propriet√†</h2>
<p>La propiet√† <code class="language-plaintext highlighter-rouge">.lenght</code> restituisce il numero di caratteri presenti nella stringa.</p>

<div class="language-js highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kd">const</span> <span class="nx">nome</span> <span class="o">=</span> <span class="dl">"</span><span class="s2">marco</span><span class="dl">"</span><span class="p">;</span>
<span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">nome</span><span class="p">.</span><span class="nx">lenght</span><span class="p">);</span>   <span class="c1">//5</span>
<span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="dl">"</span><span class="s2">ciao</span><span class="dl">"</span><span class="p">.</span><span class="nx">lenght</span><span class="p">);</span> <span class="c1">//4</span>
</code></pre></div></div>

<h2 id="metodi">Metodi</h2>
<p>Vediamo adesso diversi metodi applicabili alle stringhe. Pi√π avanti, quando tratteremo gli oggetti capiremo meglio la terminologia metodo/propriet√†/operatore. Per adesso √® importante capirne gli esempi applicativi e imparare ad usare le stringhe per intuirne le potenzialit√†.</p>

<p><code class="language-plaintext highlighter-rouge">toUpperCase()</code>:</p>
<ul>
  <li><strong>Parametri</strong> :</li>
  <li><strong>Tipo di Ritorno</strong> : <code class="language-plaintext highlighter-rouge">String</code></li>
  <li><strong>Descrizione</strong> : Ritorna la stringa in caratteri maiuscoli
    <div class="language-js highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="dl">"</span><span class="s2">simOne di rIcco</span><span class="dl">"</span><span class="p">.</span><span class="nx">toUpperCase</span><span class="p">());</span> <span class="c1">//SIMONE DI RICCO</span>
</code></pre></div>    </div>
  </li>
</ul>

<p><code class="language-plaintext highlighter-rouge">toLowerCase()</code>:</p>
<ul>
  <li><strong>Parametri</strong> :</li>
  <li><strong>Tipo di Ritorno</strong> : <code class="language-plaintext highlighter-rouge">String</code></li>
  <li><strong>Descrizione</strong> :Ritorna la stringa in caratteri minuscoli
    <div class="language-js highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="dl">"</span><span class="s2">SimOne di rICco</span><span class="dl">"</span><span class="p">.</span><span class="nx">toLowerCase</span><span class="p">());</span> <span class="c1">//simone di ricco</span>
</code></pre></div>    </div>
  </li>
</ul>

<p><code class="language-plaintext highlighter-rouge">charAt(index)</code>:</p>
<ul>
  <li><strong>Parametri</strong> : <code class="language-plaintext highlighter-rouge">index</code> (<code class="language-plaintext highlighter-rouge">Number</code>)</li>
  <li><strong>Tipo di Ritorno</strong> : <code class="language-plaintext highlighter-rouge">String</code></li>
  <li><strong>Descrizione</strong> :  Restituisce il carattere all‚Äôinterno della stringa corrispondente all‚Äôindice <em>index</em> (Ottenibile anche tramite l‚Äôindicizzazione [ ])
    <div class="language-js highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="dl">"</span><span class="s2">JaVascript</span><span class="dl">"</span><span class="p">.</span><span class="nx">charAt</span><span class="p">(</span><span class="mi">3</span><span class="p">));</span> <span class="c1">//a</span>
</code></pre></div>    </div>
  </li>
</ul>

<p><code class="language-plaintext highlighter-rouge">substring(indexStart, indexEnd)</code>:</p>
<ul>
  <li><strong>Parametri</strong> : <code class="language-plaintext highlighter-rouge">indexStart</code> (<code class="language-plaintext highlighter-rouge">Number</code>), indexEnd (<code class="language-plaintext highlighter-rouge">Number</code>)</li>
  <li><strong>Tipo di Ritorno</strong> : <code class="language-plaintext highlighter-rouge">String</code></li>
  <li><strong>Descrizione</strong> : Ritorna la porzione di stringa compresa tra <em>indexStart</em> incluso e <em>indexEnd</em> escluso.
    <div class="language-js highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="dl">"</span><span class="s2">JaVascript language</span><span class="dl">"</span><span class="p">.</span><span class="nx">substring</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span> <span class="mi">10</span><span class="p">));</span> <span class="c1">//JaVascript</span>
</code></pre></div>    </div>
  </li>
</ul>

<p><code class="language-plaintext highlighter-rouge">endsWith(param)</code></p>
<ul>
  <li><strong>Parametri</strong> : <code class="language-plaintext highlighter-rouge">param</code> (<code class="language-plaintext highlighter-rouge">String</code>)</li>
  <li><strong>Tipo di Ritorno</strong> : <code class="language-plaintext highlighter-rouge">boolean</code></li>
  <li><strong>Descrizione</strong> :ritorna un boolean se la stringa termina o meno con la stringa <em>param</em>
    <div class="language-js highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="dl">"</span><span class="s2">myPdfFile.pdf</span><span class="dl">"</span><span class="p">.</span><span class="nx">endsWith</span><span class="p">(</span><span class="dl">"</span><span class="s2">pdf</span><span class="dl">"</span><span class="p">));</span> <span class="c1">//true</span>
<span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="dl">"</span><span class="s2">01110000011</span><span class="dl">"</span><span class="p">.</span><span class="nx">endsWith</span><span class="p">(</span><span class="dl">"</span><span class="s2">10</span><span class="dl">"</span><span class="p">));</span> <span class="c1">//false</span>
</code></pre></div>    </div>
  </li>
</ul>

<p><code class="language-plaintext highlighter-rouge">startsWith(string)</code>:</p>
<ul>
  <li><strong>Parametri</strong> : <code class="language-plaintext highlighter-rouge">param</code> (<code class="language-plaintext highlighter-rouge">String</code>)</li>
  <li><strong>Tipo di Ritorno</strong> : <code class="language-plaintext highlighter-rouge">boolean</code></li>
  <li><strong>Descrizione</strong> :ritorna un boolean (true/false) se la stringa inizia o meno con la stringa <em>param</em>
    <div class="language-js highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="dl">"</span><span class="s2">01110000011</span><span class="dl">"</span><span class="p">.</span><span class="nx">startsWith</span><span class="p">(</span><span class="dl">"</span><span class="s2">0111</span><span class="dl">"</span><span class="p">));</span> <span class="c1">//true</span>
</code></pre></div>    </div>
  </li>
</ul>

<p><code class="language-plaintext highlighter-rouge">.includes(param1, ?param2)</code>:</p>
<ul>
  <li><strong>Parametri</strong> : <code class="language-plaintext highlighter-rouge">param1</code> (<code class="language-plaintext highlighter-rouge">String</code>), <code class="language-plaintext highlighter-rouge">param2</code> (<code class="language-plaintext highlighter-rouge">Number</code>),</li>
  <li><strong>Tipo di Ritorno</strong> : <code class="language-plaintext highlighter-rouge">boolean</code></li>
  <li><strong>Descrizione</strong> : cerca la stringa <em>param1</em> a partire dall‚Äôindice opzionale <em>param2</em>, ritorna true o false. Se <em>param2</em> √® omesso cerca <em>param1</em> in tutta la stringa
    <div class="language-js highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="dl">"</span><span class="s2">JaVascript is programming language</span><span class="dl">"</span><span class="p">.</span><span class="nx">includes</span><span class="p">(</span><span class="dl">"</span><span class="s2">is</span><span class="dl">"</span><span class="p">));</span> <span class="c1">//true</span>
<span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="dl">"</span><span class="s2">JaVascript is programming language</span><span class="dl">"</span><span class="p">.</span><span class="nx">includes</span><span class="p">(</span><span class="dl">"</span><span class="s2">is</span><span class="dl">"</span><span class="p">,</span> <span class="mi">16</span><span class="p">));</span> <span class="c1">//false</span>
</code></pre></div>    </div>
  </li>
</ul>

<p><code class="language-plaintext highlighter-rouge">indexOf(param1, ?param2)</code> :</p>
<ul>
  <li><strong>Parametri</strong> : <code class="language-plaintext highlighter-rouge">param1</code> (<code class="language-plaintext highlighter-rouge">String</code>), <code class="language-plaintext highlighter-rouge">param2</code> (<code class="language-plaintext highlighter-rouge">Number</code>),</li>
  <li><strong>Tipo di Ritorno</strong> : <code class="language-plaintext highlighter-rouge">Number</code></li>
  <li><strong>Descrizione</strong> : Cerca la prima occorrenza della stringa <em>param1</em> a partire dall‚Äôindice opzionale <em>param2</em>. Restituisce l‚Äôindice della posizione di <em>param1</em>. Se non trova <em>param1</em> nella stringa restituisce -1. Se <em>param2</em> √® omesso cerca <em>param1</em> in tutta la stringa a partire dall‚Äôinizio della stringa.
    <div class="language-js highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="dl">"</span><span class="s2">0011010111000110</span><span class="dl">"</span><span class="p">.</span><span class="nx">indexOf</span><span class="p">(</span><span class="dl">"</span><span class="s2">111</span><span class="dl">"</span><span class="p">));</span> <span class="c1">//7</span>
<span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="dl">"</span><span class="s2">0011010111000110</span><span class="dl">"</span><span class="p">.</span><span class="nx">indexOf</span><span class="p">(</span><span class="dl">"</span><span class="s2">111</span><span class="dl">"</span><span class="p">,</span> <span class="mi">10</span><span class="p">));</span> <span class="c1">//-1</span>
</code></pre></div>    </div>
  </li>
</ul>

<p><code class="language-plaintext highlighter-rouge">lastIndexOf(param1, param2)</code> :</p>
<ul>
  <li><strong>Parametri</strong> : <code class="language-plaintext highlighter-rouge">param1</code> (<code class="language-plaintext highlighter-rouge">String</code>), <code class="language-plaintext highlighter-rouge">param2</code> (<code class="language-plaintext highlighter-rouge">Number</code>),</li>
  <li><strong>Tipo di Ritorno</strong> : <code class="language-plaintext highlighter-rouge">Number</code></li>
  <li><strong>Descrizione</strong> :  Cerca l‚Äôultima occorrenza della stringa <em>param1</em> vincolato dall‚Äôindice limite <em>param2</em>.  Restituisce l‚Äôindice della posizione di <em>param1</em>. Se <em>param2</em> √® omesso cerca <em>param1</em> in tutta la stringa a partire dalla fine della stringa.</li>
</ul>

<p><code class="language-plaintext highlighter-rouge">padEnd(param1, param2)</code>:</p>
<ul>
  <li><strong>Parametri</strong> : <code class="language-plaintext highlighter-rouge">param1</code> (<code class="language-plaintext highlighter-rouge">Number</code>), <code class="language-plaintext highlighter-rouge">param2</code> (<code class="language-plaintext highlighter-rouge">String</code>),</li>
  <li><strong>Tipo di Ritorno</strong> : <code class="language-plaintext highlighter-rouge">String</code></li>
  <li><strong>Descrizione</strong> : Riempie la stringa fino a una lunghezza massima di <em>param1</em>, aggiungendo come riempitivo in coda la stringa <em>param2</em></li>
</ul>

<div class="language-js highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="dl">"</span><span class="s2">100</span><span class="dl">"</span><span class="p">.</span><span class="nx">padEnd</span><span class="p">(</span><span class="mi">5</span><span class="p">,</span> <span class="dl">"</span><span class="s2">-</span><span class="dl">"</span><span class="p">));</span>    <span class="c1">//100--</span>
<span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="dl">"</span><span class="s2">100000</span><span class="dl">"</span><span class="p">.</span><span class="nx">padEnd</span><span class="p">(</span><span class="mi">5</span><span class="p">,</span> <span class="dl">"</span><span class="s2">-</span><span class="dl">"</span><span class="p">));</span> <span class="c1">//100000</span>
<span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="dl">""</span><span class="p">.</span><span class="nx">padEnd</span><span class="p">(</span><span class="mi">5</span><span class="p">,</span> <span class="dl">"</span><span class="s2">-</span><span class="dl">"</span><span class="p">));</span>       <span class="c1">//-----</span>
</code></pre></div></div>

<p><code class="language-plaintext highlighter-rouge">padStart(param1, param2)</code>:</p>
<ul>
  <li><strong>Parametri</strong> : <code class="language-plaintext highlighter-rouge">param1</code> (<code class="language-plaintext highlighter-rouge">Number</code>), <code class="language-plaintext highlighter-rouge">param2</code> (<code class="language-plaintext highlighter-rouge">String</code>)</li>
  <li><strong>Tipo di Ritorno</strong> : <code class="language-plaintext highlighter-rouge">String</code></li>
  <li><strong>Descrizione</strong> : Riempie la stringa fino a una lunghezza massima di <em>param1</em>, aggiungendo come riempitivo in testa la stringa <em>param2</em></li>
</ul>

<div class="language-js highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="dl">"</span><span class="s2">120</span><span class="dl">"</span><span class="p">.</span><span class="nx">padStart</span><span class="p">(</span><span class="mi">5</span><span class="p">,</span> <span class="dl">"</span><span class="s2">0</span><span class="dl">"</span><span class="p">));</span>  <span class="c1">//00120</span>
<span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="dl">"</span><span class="s2">9040</span><span class="dl">"</span><span class="p">.</span><span class="nx">padStart</span><span class="p">(</span><span class="mi">5</span><span class="p">,</span> <span class="dl">"</span><span class="s2">0</span><span class="dl">"</span><span class="p">));</span> <span class="c1">//09040</span>
<span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="dl">"</span><span class="s2">2</span><span class="dl">"</span><span class="p">.</span><span class="nx">padStart</span><span class="p">(</span><span class="mi">5</span><span class="p">,</span> <span class="dl">"</span><span class="s2">0</span><span class="dl">"</span><span class="p">));</span>    <span class="c1">//00002</span>
</code></pre></div></div>

<p><code class="language-plaintext highlighter-rouge">repeat(param)</code>:</p>
<ul>
  <li><strong>Parametri</strong> : <code class="language-plaintext highlighter-rouge">param</code> (<code class="language-plaintext highlighter-rouge">Number</code>)</li>
  <li><strong>Tipo di Ritorno</strong> : <code class="language-plaintext highlighter-rouge">String</code></li>
  <li><strong>Descrizione</strong> :  Replica la stringa un numero di volte specificato da <em>param</em></li>
</ul>

<div class="language-js highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="dl">"</span><span class="s2">0</span><span class="dl">"</span><span class="p">.</span><span class="nx">repeat</span><span class="p">(</span><span class="mi">32</span><span class="p">));</span> <span class="c1">//00000000000000000000000000000000</span>
<span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="dl">"</span><span class="s2">*-</span><span class="dl">"</span><span class="p">.</span><span class="nx">repeat</span><span class="p">(</span><span class="mi">8</span><span class="p">));</span> <span class="c1">//*-*-*-*-*-*-*-*-</span>
</code></pre></div></div>

<p><code class="language-plaintext highlighter-rouge">replace(param1, param2)</code>:</p>
<ul>
  <li><strong>Parametri</strong> : <code class="language-plaintext highlighter-rouge">param1</code> (<code class="language-plaintext highlighter-rouge">String</code>), <code class="language-plaintext highlighter-rouge">param2</code> (<code class="language-plaintext highlighter-rouge">String</code>)</li>
  <li><strong>Tipo di Ritorno</strong> : <code class="language-plaintext highlighter-rouge">String</code></li>
  <li><strong>Descrizione</strong> :  Sostituisce la prima occorennza della stringa <em>param1</em> con la stringa <em>param2</em>. Funziona anche se <em>param1</em> √® un‚Äôespressione regolare.</li>
</ul>

<div class="language-js highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="dl">"</span><span class="s2">Ciao a tutto il mondo</span><span class="dl">"</span><span class="p">.</span><span class="nx">replace</span><span class="p">(</span><span class="dl">"</span><span class="s2">o</span><span class="dl">"</span><span class="p">,</span> <span class="dl">"</span><span class="s2">0</span><span class="dl">"</span><span class="p">));</span> <span class="c1">//Cia0 a tutto il mondo</span>
<span class="c1">//Uso interessante del metodo replace() con un'espressione regolare. /o/g &gt;&gt;&gt; cerca tutte le occorrenze</span>
<span class="c1">//di "o". Nota che "g" sta per "global" cio√® tutte</span>
<span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="dl">"</span><span class="s2">Ciao a tutto il mondo</span><span class="dl">"</span><span class="p">.</span><span class="nx">replace</span><span class="p">(</span><span class="sr">/o/g</span><span class="p">,</span> <span class="dl">"</span><span class="s2">0</span><span class="dl">"</span><span class="p">));</span> <span class="c1">//Cia0 a tutt0 il m0nd0</span>
</code></pre></div></div>

<p><code class="language-plaintext highlighter-rouge">search(param)</code>:</p>
<ul>
  <li><strong>Parametri</strong> : <code class="language-plaintext highlighter-rouge">param</code> (<code class="language-plaintext highlighter-rouge">String</code>)</li>
  <li><strong>Tipo di Ritorno</strong> : <code class="language-plaintext highlighter-rouge">Number</code></li>
  <li><strong>Descrizione</strong> : cerca la prima occorenza di <em>param</em> e restituisce l‚Äôindece della posizione. Funziona anche se <em>param</em> √® un‚Äôespressione regolare.
    <div class="language-js highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="dl">"</span><span class="s2">Ciao a tutto il mondo</span><span class="dl">"</span><span class="p">.</span><span class="nx">search</span><span class="p">(</span><span class="dl">"</span><span class="s2">mondo</span><span class="dl">"</span><span class="p">));</span>  <span class="c1">//16</span>
<span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="dl">"</span><span class="s2">Ciao a tutto il mondo</span><span class="dl">"</span><span class="p">.</span><span class="nx">search</span><span class="p">(</span><span class="dl">"</span><span class="s2">ill</span><span class="dl">"</span><span class="p">));</span>  <span class="c1">//-1</span>
</code></pre></div>    </div>
  </li>
</ul>

<p><code class="language-plaintext highlighter-rouge">slice(indexStart, indexEnd)</code>:</p>
<ul>
  <li><strong>Parametri</strong> : <code class="language-plaintext highlighter-rouge">indexStart</code> (<code class="language-plaintext highlighter-rouge">Number</code>), <code class="language-plaintext highlighter-rouge">indexEnd</code> (<code class="language-plaintext highlighter-rouge">Number</code>)</li>
  <li><strong>Tipo di Ritorno</strong> : <code class="language-plaintext highlighter-rouge">String</code></li>
  <li><strong>Descrizione</strong> :  Restituisce una sottostringa tra <em>indexStart</em> e <em>indexEnd</em></li>
</ul>

<div class="language-js highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="dl">"</span><span class="s2">DRCSMN91L22E715Q</span><span class="dl">"</span><span class="p">.</span><span class="nx">slice</span><span class="p">(</span><span class="mi">6</span><span class="p">,</span> <span class="mi">8</span><span class="p">));</span> <span class="c1">//91</span>
</code></pre></div></div>

<p><code class="language-plaintext highlighter-rouge">split(separatore, ?max)</code>:</p>
<ul>
  <li><strong>Parametri</strong> : <code class="language-plaintext highlighter-rouge">separatore</code> (<code class="language-plaintext highlighter-rouge">String</code>), <code class="language-plaintext highlighter-rouge">max</code> (<code class="language-plaintext highlighter-rouge">Number</code>)</li>
  <li><strong>Tipo di Ritorno</strong> : Array of <code class="language-plaintext highlighter-rouge">String</code></li>
  <li><strong>Descrizione</strong> : Pu√≤ essere utilizzato per raggruppare delle stringhe sottoforma di array contenute in un unica grande stringa e separate tramite un separatore. Crea quindi un array di stringhe contenente porzioni di stringa derivate dalla stringa a cui √® applicato il metodo separate dal carattere (o i caratteri) come indicato nel parametro <em>separatore</em>. Il secondo parametro, opzionale, indica il numero massimo di elementi dell‚Äôarray.</li>
</ul>

<div class="language-js highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kd">const</span> <span class="nx">myArray</span> <span class="o">=</span> <span class="dl">"</span><span class="s2">Ciao a tutto il mondo</span><span class="dl">"</span><span class="p">.</span><span class="nx">split</span><span class="p">(</span><span class="dl">"</span><span class="s2"> </span><span class="dl">"</span><span class="p">);</span>
<span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">myArray</span><span class="p">);</span>    <span class="c1">//(5)¬†["Ciao", "a", "tutto", "il", "mondo"]</span>
<span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">myArray</span><span class="p">[</span><span class="mi">3</span><span class="p">]);</span> <span class="c1">//il</span>

<span class="kd">const</span> <span class="nx">myArray2</span> <span class="o">=</span> <span class="dl">"</span><span class="s2">Ciao a tutto il mondo</span><span class="dl">"</span><span class="p">.</span><span class="nx">split</span><span class="p">(</span><span class="dl">"</span><span class="s2"> </span><span class="dl">"</span><span class="p">,</span> <span class="mi">3</span><span class="p">);</span>
<span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">myArray2</span><span class="p">);</span>   <span class="c1">//(3)¬†["Ciao", "a", "tutto"]</span>
</code></pre></div></div>

<p><code class="language-plaintext highlighter-rouge">trim()</code>:</p>
<ul>
  <li><strong>Parametri</strong> :</li>
  <li><strong>Tipo di Ritorno</strong> : <code class="language-plaintext highlighter-rouge">String</code></li>
  <li><strong>Descrizione</strong> : rimuove gli spazi all‚Äôinizio e alla fine di una stringa
    <div class="language-js highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="dl">"</span><span class="s2">#</span><span class="dl">"</span> <span class="o">+</span> <span class="dl">"</span><span class="s2">         Ciao a tutto il mondo    </span><span class="dl">"</span><span class="p">.</span><span class="nx">trim</span><span class="p">()</span> <span class="o">+</span> <span class="dl">"</span><span class="s2">#</span><span class="dl">"</span><span class="p">);</span> <span class="c1">//#Ciao a tutto il mondo#</span>
</code></pre></div>    </div>
  </li>
</ul>

<p><code class="language-plaintext highlighter-rouge">trimLeft()</code>:</p>
<ul>
  <li><strong>Parametri</strong> :</li>
  <li><strong>Tipo di Ritorno</strong> : <code class="language-plaintext highlighter-rouge">String</code></li>
  <li><strong>Descrizione</strong> : rimuove gli spazi in testa a una stringa.
    <div class="language-js highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="dl">"</span><span class="s2">#</span><span class="dl">"</span> <span class="o">+</span> <span class="dl">"</span><span class="s2">         Ciao a tutto il mondo    </span><span class="dl">"</span><span class="p">.</span><span class="nx">trimLeft</span><span class="p">()</span> <span class="o">+</span> <span class="dl">"</span><span class="s2">#</span><span class="dl">"</span><span class="p">);</span> <span class="c1">//#Ciao a tutto il mondo    #</span>
</code></pre></div>    </div>
  </li>
</ul>

<p><code class="language-plaintext highlighter-rouge">trimRight()</code>:</p>
<ul>
  <li><strong>Parametri</strong> :</li>
  <li><strong>Tipo di Ritorno</strong> : <code class="language-plaintext highlighter-rouge">String</code></li>
  <li><strong>Descrizione</strong> : rimuove gli spazi in coda a una stringa
    <div class="language-js highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="dl">"</span><span class="s2">#</span><span class="dl">"</span> <span class="o">+</span> <span class="dl">"</span><span class="s2">         Ciao a tutto il mondo    </span><span class="dl">"</span><span class="p">.</span><span class="nx">trimRight</span><span class="p">()</span> <span class="o">+</span> <span class="dl">"</span><span class="s2">#</span><span class="dl">"</span><span class="p">);</span> <span class="c1">//#         Ciao a tutto il mondo#</span>
</code></pre></div>    </div>
  </li>
</ul>

:ET