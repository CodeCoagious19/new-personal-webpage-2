I"ﬂ
<h2 id="prerequisiti-al-corso">Prerequisiti al corso</h2>
<p>Prima di iniziare questo modulo, dovresti avere familiarit√† con i linguaggi <a href="">HTML e CSS</a>.</p>

<h2 id="approccio-al-corso">Approccio al corso</h2>
<p>Questo corso √® stato scritto con l‚Äôintento di imparare il linguaggio attraverso esempi pratici. Se all‚Äôinizio pensate di trovare troppo pesanti alcuni capitoli puramente ‚Äúteorici‚Äù vi capisco, lo penserei anch‚Äôio quindi <strong>evitate</strong> con leggerezza queste sezioni.
Faccio notare anche l‚Äôapproccio a ‚ÄúLezioni‚Äù brevi che ho preferito rispetto all‚Äôapproccio classico a ‚ÄúLibro/capitoli‚Äù che dal mio punto di vista allunga il tempo di apprendimento specialmente per chi non mastica gi√† un po‚Äô il linguaggio e che comunque pu√≤ essere seguito parallelamente per approfondimenti. 
Concludo nella speranza che il corso possa piacervi e risultare snello per l‚Äôapprendimento.</p>

<h2 id="strumenti-necessari">Strumenti Necessari</h2>

<p>Per questo corso sar√† necessario un <strong>web browser</strong> e un editor di testo. Come web browser utilizzeremo <a href="https://www.google.com/chrome/">Google Chrome</a> mentre come editor di testo utilizzeremo <a href="https://code.visualstudio.com/download">Visual Studio Code</a>.</p>

<h2 id="introduzione">Introduzione</h2>

<p>JavaScript √® un linguaggio di scripting cross-platform e object-oriented. √à un linguaggio piccolo e leggero. All interno di un ambiente ospite (ad esempio un web browser), JavaScript pu√≤ essere connesso agli oggetti del suo ambiente per fornire controllo programmatico su di essi.</p>

<p>JavaScript contiene una libreria standard di oggetti come Array, Date e Math, ed una serie di elementi base del linguaggio come operatori, strutture di controllo e dichiarazioni. La base di JavaScript pu√≤ essere estesa per una variet√† di scopi fornendogli oggetti aggiuntivi; ad esempio:</p>

<ul>
  <li><em>Client-side</em> JavaScript estende il linguaggio base fornendo oggetti per controllare il browser ed il suo Document Object Model (DOM). Per esempio, le estensioni client-side permettono ad una applicazione di inserire elementi in un form HTML e rispondere ad eventi dell‚Äôutente come il click del mouse, input nei form e navigazione delle pagine.</li>
  <li><em>Server-side</em> JavaScript estende il linguaggio base fornendo oggetti rilevanti per eseguire JavaScript in un server. Per esempio le estensioni server-side consentono ad una applicazione di comunicare con un database, forniscono continuit√† di informazioni da una chiamata ad un altra dell‚Äôapplicazione, o permettono la manipolazione di files nel server.</li>
</ul>

<p><a href="https://developer.mozilla.org/it/docs/Web/JavaScript/Guida/Introduzione">MDN - Introduzione</a></p>

:ET