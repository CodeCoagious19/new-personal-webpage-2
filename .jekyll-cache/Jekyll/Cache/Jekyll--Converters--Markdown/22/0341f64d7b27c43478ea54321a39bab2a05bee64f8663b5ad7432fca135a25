I"Å%<h2 id="introduzione-agli-object">Introduzione agli Object</h2>

<p>JavaScript √® progettato su un semplice paradigma basato su oggetti. Un oggetto √® una raccolta di propriet√† e una propriet√† √® un‚Äôassociazione tra un nome (o chiave) e un valore. Il valore di una propriet√† pu√≤ essere una funzione, nel qual caso la propriet√† √® nota come metodo. Oltre agli oggetti predefiniti nel browser, √® possibile definire i propri oggetti. Questo capitolo descrive come utilizzare oggetti, propriet√†, funzioni e metodi e come creare i propri oggetti.</p>

<p>Gli oggetti in JavaScript, proprio come in molti altri linguaggi di programmazione, possono essere paragonati agli oggetti nella vita reale. Il concetto di oggetti in JavaScript pu√≤ essere compreso con oggetti tangibili della vita reale.</p>

<p>In JavaScript, un oggetto √® un‚Äôentit√† autonoma, con propriet√† e tipo. Confrontalo con una tazza, per esempio. Una tazza √® un oggetto, con propriet√†. Una tazza ha un colore, un disegno, un peso, un materiale di cui √® composta, ecc. Allo stesso modo, gli oggetti JavaScript possono avere propriet√† che definiscono le loro caratteristiche.</p>

<p>Fonte: <em>https://developer.mozilla.org/en-US/docs/Web/JavaScript/Guide/Working_with_Objects#:~:text=JavaScript%20is%20designed%20on%20a,is%20known%20as%20a%20method.</em></p>

<p>Sono un tipo di data-structure che rappresenta elementi tramite una coppia <em>chiave/valore</em>. Si accede al valore tramite il nome dell‚Äôoggetto e la sua <em>property</em> cio√® l‚Äôidentificativo della chiave.</p>

<div class="language-js highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kd">const</span> <span class="nx">object</span> <span class="o">=</span> <span class="p">{</span>
    <span class="na">key1</span><span class="p">:</span> <span class="nx">value1</span><span class="p">,</span>
    <span class="na">key2</span><span class="p">:</span> <span class="nx">value2</span><span class="p">,</span>
    <span class="na">key3</span><span class="p">:</span> <span class="nx">value3</span>
<span class="p">}</span>
</code></pre></div></div>

<p>SI chiama modello per prototipazione. Cio√® un modello creato che andremo ad arricchire e modificare nel corso del codice dinamicamente.</p>

<p>Un oggetto in js √® una collezione di coppe <em>identificatore: valore</em></p>

<p>Esempio</p>

<div class="language-js highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1">// Dichiarazione di un oggetto, prototipo</span>
<span class="kd">const</span> <span class="nx">persona</span> <span class="o">=</span> <span class="p">{</span>
    <span class="na">nome</span><span class="p">:</span> <span class="dl">"</span><span class="s2">Simone</span><span class="dl">"</span><span class="p">,</span>
    <span class="na">eta</span><span class="p">:</span> <span class="mi">23</span><span class="p">,</span>
    <span class="na">citta</span><span class="p">:</span> <span class="dl">"</span><span class="s2">Lucca</span><span class="dl">"</span>
<span class="p">}</span>

<span class="c1">//accesso ai dati</span>
<span class="c1">//Modo 1</span>
<span class="nx">persona</span><span class="p">.</span><span class="nx">nome</span><span class="p">;</span> <span class="c1">//Simone, (=== persona["nome"])</span>
<span class="c1">//Modo2</span>
<span class="nx">persona</span><span class="p">[</span><span class="dl">"</span><span class="s2">citta</span><span class="dl">"</span><span class="p">];</span> <span class="c1">//Lucca, (=== persona.citta)</span>

<span class="c1">//modifica di un valore dell'oggetto</span>
<span class="nx">persona</span><span class="p">.</span><span class="nx">nome</span> <span class="o">=</span> <span class="dl">"</span><span class="s2">Luigi</span><span class="dl">"</span><span class="p">;</span>

<span class="c1">//Eliminazione della property &lt;citta&gt; dall'oggetto</span>
<span class="k">delete</span> <span class="nx">persona</span><span class="p">.</span><span class="nx">citta</span><span class="p">;</span> 

<span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">persona</span><span class="p">);</span>

<span class="cm">/*
persona = {
    nome: "Luigi",
    eta: 23
}
*/</span>
</code></pre></div></div>

<p>La creazione/dichiarazione di un oggetto con propriet√† e metodi (vedremo pi√π avanti) viene anche detto prototipo. Il prototipo √® un modello base dell‚Äôoggetto che pu√≤ essere arricchito o modificato nel corso del programma dinamicamente</p>

<p>Posso creare un oggetto inizialmente vuoto e aggiungere gli elementi successivamente</p>

<div class="language-js highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1">//Dichiaro un oggetto vuoto, modo 1 - preferibile</span>
<span class="kd">var</span> <span class="nx">persona</span> <span class="o">=</span> <span class="p">{};</span>

<span class="c1">//Dichiaro un oggetto vuoto, modo 2</span>
<span class="kd">var</span> <span class="nx">computer</span> <span class="o">=</span> <span class="k">new</span> <span class="nb">Object</span><span class="p">;</span>

<span class="c1">//Inserisco elementi in un oggetto inizialmente vuoto</span>
<span class="nx">persona</span><span class="p">.</span><span class="nx">nome</span> <span class="o">=</span> <span class="dl">"</span><span class="s2">billy</span><span class="dl">"</span><span class="p">;</span>
<span class="nx">persona</span><span class="p">.</span><span class="nx">hobby</span> <span class="o">=</span> <span class="dl">"</span><span class="s2">scacchi</span><span class="dl">"</span><span class="p">;</span>

<span class="nx">computer</span><span class="p">.</span><span class="nx">ram</span> <span class="o">=</span> <span class="dl">"</span><span class="s2">4Gb</span><span class="dl">"</span><span class="p">;</span>
<span class="nx">computer</span><span class="p">.</span><span class="nx">rom</span> <span class="o">=</span> <span class="dl">"</span><span class="s2">1Tb</span><span class="dl">"</span><span class="p">;</span>
</code></pre></div></div>

<p>Di seguito mostro un esempio di un oggetto pi√π complicato. In realt√† √® un array di oggetti</p>

<div class="language-js highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kd">var</span> <span class="nx">post</span> <span class="o">=</span> <span class="p">[</span>
    <span class="c1">// index: 0</span>
    <span class="p">{</span>
        <span class="na">username</span><span class="p">:</span> <span class="dl">"</span><span class="s2">Billy</span><span class="dl">"</span><span class="p">,</span>
        <span class="na">like</span><span class="p">:</span> <span class="mi">4</span><span class="p">,</span>
        <span class="na">commenti</span><span class="p">:</span> <span class="p">[</span><span class="dl">"</span><span class="s2">figo!</span><span class="dl">"</span><span class="p">,</span> <span class="dl">"</span><span class="s2">ottimo</span><span class="dl">"</span><span class="p">,</span> <span class="dl">"</span><span class="s2">bleah</span><span class="dl">"</span><span class="p">]</span>
    <span class="p">},</span>
    <span class="c1">// index: 1</span>
    <span class="p">{</span>
        <span class="na">username</span><span class="p">:</span> <span class="dl">"</span><span class="s2">thebest95</span><span class="dl">"</span><span class="p">,</span>
        <span class="na">like</span><span class="p">:</span> <span class="mi">0</span><span class="p">,</span>
        <span class="na">commenti</span><span class="p">:</span> <span class="p">[</span><span class="dl">"</span><span class="s2">fighissimo</span><span class="dl">"</span><span class="p">,</span> <span class="dl">"</span><span class="s2">buono</span><span class="dl">"</span><span class="p">,</span> <span class="dl">"</span><span class="s2">buonissimo</span><span class="dl">"</span><span class="p">]</span>
    <span class="p">}</span>
<span class="p">]</span>

<span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">post</span><span class="p">);</span>

<span class="cm">/*
Console:
---------------
(2) [{‚Ä¶}, {‚Ä¶}]
    0:
        commenti: (3) ["figo!", "ottimo", "bleah"]
        like: 4
        username: "Billy"
        __proto__: Object
    1:
        commenti: (3) ["fighissimo", "buono", "buonissimo"]
        like: 0
        username: "thebest95"
        __proto__: Object
    length: 2
    __proto__: Array(0)
*/</span>

<span class="c1">//Aggiungo un commento al primo elemento, cio√® all'oggetto cui corrisponde username "Billy"</span>
<span class="nx">post</span><span class="p">[</span><span class="mi">0</span><span class="p">].</span><span class="nx">commenti</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="dl">"</span><span class="s2">Fantastico!</span><span class="dl">"</span><span class="p">);</span>
<span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">post</span><span class="p">);</span>

<span class="cm">/*
Console:
---------------
(2) [{‚Ä¶}, {‚Ä¶}]
    0:
        commenti: (3) ["figo!", "ottimo", "bleah","Fantastico!"]
        like: 4
        username: "Billy"
        __proto__: Object
    1:
        commenti: (3) ["fighissimo", "buono", "buonissimo"]
        like: 0
        username: "thebest95"
        __proto__: Object
    length: 2
    __proto__: Array(0)
*/</span>
</code></pre></div></div>

:ET