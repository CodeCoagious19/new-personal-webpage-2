I"o<h2 id="cenni-storici">Cenni storici</h2>
<p>Originariamente sviluppato da Brendan Eich della Netscape Communications con il nome di Mochan e successivamente di LiveScript, in seguito è stato rinominato “JavaScript” ed è stato formalizzato con una sintassi più vicina a quella del linguaggio Java di Sun Microsystems (che nel 2010 è stata acquistata da Oracle). Standardizzato per la prima volta il 1997 dalla ECMA con il nome ECMAScript, l’ultimo standard, di giugno 2017, è ECMA-262 Edition 8 ed è anche uno standard ISO (ISO/IEC 16262).</p>

<p><a href="https://it.wikipedia.org/wiki/JavaScript">Wikipedia - JavaScript</a></p>

<h2 id="aspetti-strutturali">Aspetti strutturali</h2>

<p>Le caratteristiche principali di JavaScript sono:</p>

<ul>
  <li>essere un linguaggio interpretato: il codice non viene compilato, ma eseguito direttamente; in JavaScript lato client, il codice viene eseguito dall’interprete contenuto nel browser dell’utente.</li>
  <li>la sintassi è relativamente simile a quella dei linguaggi C, C++ e Java.</li>
  <li>definisce le funzionalità tipiche dei linguaggi di programmazione ad alto livello (strutture di controllo, cicli, ecc.) e consente l’utilizzo del paradigma object oriented.</li>
  <li>è un linguaggio debolmente tipizzato.</li>
  <li>è un linguaggio debolmente orientato agli oggetti. Ad esempio, il meccanismo dell’ereditarietà è più simile a quello del Self e del NewtonScript che a quello del linguaggio Java, fortemente orientato agli oggetti. Gli oggetti stessi ricordano più gli array associativi del linguaggio Perl che gli oggetti di Java o C++.</li>
</ul>

<p>Altri aspetti di interesse: in JavaScript lato client, il codice viene eseguito direttamente sul client e non sul server. Il vantaggio di questo approccio è che, anche con la presenza di script particolarmente complessi, il web server non rischia sovraccarichi dato che il lavoro viene svolto dal client. Un rovescio della medaglia è che, nel caso di script particolarmente grandi, il tempo per il trasferimento dalla rete può diventare eccessivamente lungo. Inoltre ogni informazione che presuppone un accesso a dati memorizzati in una base di dati remota deve essere rimandata a un linguaggio che effettui materialmente la transazione, per poi restituire i risultati ad una o più variabili JavaScript; operazioni del genere richiedono un nuovo caricamento della pagina stessa. Questi limiti sono però stati superati in buona parte con la nascita di AJAX.</p>

<p>Alcune altre caratteristiche di JavaScript degne di nota:</p>

<ul>
  <li>Può usare caratteri Unicode</li>
  <li>Può valutare le espressioni regolari (introdotte nella versione 1.2; supporto da parte dei browser: a partire da Netscape Navigator 4 e Internet Explorer 4)</li>
  <li>Le espressioni JavaScript contenute in una stringa possono essere valutate usando la funzione eval.</li>
</ul>

<p><a href="https://it.wikipedia.org/wiki/JavaScript">Wikipedia - JavaScript</a></p>

<h2 id="versioni-di-javascript">Versioni di Javascript</h2>

<p>Un linguaggio di programmazione per essere definito uno standard ha bisogno di essere revisionato da un organo dedicato che prende il nome di ECMA International. Da questo lavoro è nato un nuovo standard che prende il nome di ECMAScript, anche se per tutti noi il termine JavaScript è rimasto sufficiente per definirlo.</p>

<p>Nel corso degli anni lo standard ha definito nuove versioni e aggiornamenti del linguaggio e delle funzionalità. Nel contempo i browser si sono adattati alle modifiche introdotte per supportare il nuovo standard. Per orientarsi al supporto allo stato attuale da parte dei browser dei nuovi standard Javascript è possibile visionare la seguente tabella:</p>

<p><a href="https://kangax.github.io/compat-table/es6/">github - es6 table</a></p>

<p><img src="images/JS-versioni.png" alt="" /></p>

<p>Possiamo affermare che la versione più utilizzata ad oggi è ES6, la ES5 è obsoleta ma di fatto ormai anche la ES2016+ è supportata da tutti i browser.</p>

<p><strong>Indice riassuntivo:</strong></p>

<ul>
  <li><strong>ECMAScript</strong> – un linguaggio standardizzato dal ECMA Internetional e supervisionato dal comitato T39;</li>
  <li><strong>JavaScript</strong> – il nome comune utilizzato per identificare lo standard ECMAScript. Con questo termine non ci rivolgiamo a una specifica versione dello standard, ma piuttosto al suo utilizzo a livello globale o parziale.</li>
  <li><strong>ECMAScript 5 (ES5)</strong> – questa rappresenta la quinta versione dello standard ECMAScript rilasciata nel 2009. Dato che a oggi i maggiori browser supportano questa versione è probabile che sarà la più comune da incontrare.</li>
  <li><strong>ECMAScript 6 (ES6)/ECMAScript 2015 (ES2015)</strong> – questa rappresenta la sesta versione dello standard ECMAScript rilasciata nel 2015. Al momento non è ancora supportata completamente dai nuovi browser e dato che presenta un gran numero di moduli ti consiglio di consultare questa tabella aggiornata.</li>
  <li><strong>ECMAScript 2016</strong> – rilasciata a inizio 2016 presenta un esiguo numero di funzionalità implementate e non dovrebbe comportare grossi problemi di compatibilità nei browser in grado di supportare la versione ES2015.</li>
</ul>

<p><a href="https://skillsandmore.org/javascript-nomi-versione/">skillsandmore - Conosci tutte le versioni di Javascript?</a></p>

<h2 id="configurazione-di-un-ide">Configurazione di un IDE</h2>

<p>Un ambiente di sviluppo integrato (in lingua inglese integrated development environment ovvero IDE, anche integrated design environment o integrated debugging environment, rispettivamente ambiente integrato di progettazione e ambiente integrato di debugging), in informatica, è un ambiente di sviluppo ovvero un software che, in fase di programmazione, supporta i programmatori nello sviluppo e debugging del codice sorgente di un programma: spesso l’IDE aiuta lo sviluppatore segnalando errori di sintassi del codice direttamente in fase di scrittura, oltre a tutta una serie di strumenti e funzionalità di supporto alla fase stessa di sviluppo e debugging.</p>

<p><a href="https://it.wikipedia.org/wiki/Integrated_development_environment">Wikipedia - Integrated development environment</a></p>

<h3 id="visual-studio-code---vs-code">Visual Studio Code - VS code</h3>

<p><img src="./images/vscode.png" alt="" /></p>

<p>Visual Studio Code è un editor di codice sorgente sviluppato da Microsoft per Windows, Linux e macOS. Include il supporto per debugging, un controllo per Git integrato, Syntax highlighting, IntelliSense, Snippet e refactoring del codice. Sono personalizzabili il tema dell’editor, le scorciatoie da tastiera e le preferenze. È un software libero e gratuito, anche se la versione ufficiale è sotto una licenza proprietaria.</p>

<p>Visual Studio Code è basato su Electron, un framework con cui è possibile sviluppare applicazioni Node.js.</p>

<p><a href="https://it.wikipedia.org/wiki/Visual_Studio_Code">Wikipedia - Visual Studio Code</a></p>

<p>In questo corso useremo <a href="https://code.visualstudio.com/download">Visual Studio Code</a> come IDE con le seguenti <strong>Estensioni:</strong></p>

<ul>
  <li><strong>HTML snippets</strong></li>
  <li><strong>javascript es6 code snippets</strong></li>
  <li><strong>live server</strong></li>
</ul>

<p>Per installare un’estensione con VS code vi rimando alla seguente immagine animata:</p>

<p><img src="./images/vscode-ext.gif" alt="" /></p>

:ET